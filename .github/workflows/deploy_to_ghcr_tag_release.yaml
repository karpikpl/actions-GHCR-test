name: Build and push Docker image with release tag

on:
  
  release:
    types: 
      - published

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  packages: write

jobs:
  push_to_ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v4
        # TODO: checkout tag?

      - name: Get Latest Release Tag
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.info(`Latest release tag: ${latestRelease.data.tag_name}`);
            core.setOutput('tag_name', latestRelease.data.tag_name);

      - name: Show Latest Release Tag
        uses: actions/github-script@v6
        with:
          script: |
            core.info('Latest release tag (result): ${{ steps.get_latest_release.outputs.result }}');
            core.info('Latest release tag (tag_name): ${{ steps.get_latest_release.outputs.tag_name }}');

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          labels: |
            org.opencontainers.image.title=my-app
            org.opencontainers.image.description=This is my awesome app
            org.opencontainers.image.source=${{ github.repository }}
          tags: |
            type=raw,enable=true,priority=1,value=${{ steps.get_latest_release.outputs.result }}
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  push_proxy_to_ghcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v4
        # TODO: checkout tag?

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Latest Release Tag
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.info(`Latest release tag: ${latestRelease.data.tag_name}`);
            core.setOutput('tag_name', latestRelease.data.tag_name);
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-with-proxy
          labels: |
            org.opencontainers.image.title=copilot-metrics-viewer-with-proxy
            org.opencontainers.image.description=Metrics viewer for GitHub Copilot usage
            org.opencontainers.image.source=${{ github.repository }}
          tags: |
            type=raw,enable=true,priority=1,value=${{ steps.get_latest_release.outputs.result }}
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push api
        uses: docker/build-push-action@v5
        with:
          file: api.Dockerfile
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
        